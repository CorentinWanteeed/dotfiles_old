#!/bin/sh

source helpers

echo 'Welcome to @romainlanz bootstrap script!'
echo 'This script will configure the system likes mine (dotfiles, keymaps, miscellaneous) for OSX El Capitan'
echo "Be careful, overwrite is defined to true and there's no backup!"

user 'Are you sure to continue? (y/N) '
read -n 1 choice
choice=${choice:-N}
printf "\n"

if [[ $choice =~ ^[nN]$ ]]; then
  exit $?
fi

if [[ ! $SHELL == '/bin/zsh' ]]; then
  info "Installing Oh My Zsh (you'll to relaunch your shell)"
  sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  success 'Done'
fi

if [[ ! $(pwd) == "$HOME/dotfiles" ]]; then
  info 'Symlinking dotfile folder'
  ln -sf $(pwd) "$HOME/dotfiles"
  success "linked $(pwd) to $HOME/dotfiles"
fi

# Symlinks all dotfiles
symlinker

# Move config folder
# info 'Symlinking .config'

source vim/boostrap

source moom/boostrap

# Configure OSX
user 'Do you want to configure OSX? (Y/n) '
read -n 1 choice
choice=${choice:-Y}
printf "\n"

if [[ $choice =~ ^[yY]$ ]]; then
  info 'Configuring OSX (required admin password)'
  sudo -v
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

  sudo nvram SystemAudioVolume=%00
  success 'Disable sound effect on boot'

  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
  success 'Expand save panel by default'

  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
  success 'Expand printing panel by default'

  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
  success 'Automatically quit printer app once the prints jobs complete'

  defaults write com.apple.LaunchServices LSQuarantine -bool false
  success 'Disable the "Are you sure you want to open this application?” dialog'

  sudo systemsetup -setcomputersleep Off > /dev/null
  success 'Never go into computer sleep mode'

  defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
  success 'Check for software updates daily, not just once per week'

  launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
  success 'Disable Notification Center and remove the menu bar icon'

  defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
  success "Disable smart quotes as they’re annoying when typing code"

  defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
  success "Disable smart dashes as they’re annoying when typing code"

  sudo tmutil disablelocal
  success 'Disable local Time Machine snapshots'

  sudo pmset -a hibernatemode 0
  success 'Disable hibernation (speeds up entering sleep mode)'

  sudo rm /Private/var/vm/sleepimage
  sudo touch /Private/var/vm/sleepimage
  sudo chflags uchg /Private/var/vm/sleepimage
  success 'Remove the sleep image file to save disk space'

  sudo pmset -a sms 0
  success "Disable the sudden motion sensor as it’s not useful for SSDs"

  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  success 'Enable tap to click for this user and for the login screen'

  defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false
  success 'Disable “natural” (Lion-style) scrolling'

  defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
  success 'Increase sound quality for Bluetooth headphones/headsets'

  defaults write "com.apple.sound.beep.feedback" -int 0
  defaults write com.apple.systemsound 'com.apple.sound.beep.volume' -float 0
  defaults write "com.apple.systemsound" "com.apple.sound.uiaudio.enabled" -int 0
  success 'Mute all sounds, incl volume change feedback'

  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
  success 'Enable full keyboard access for all controls'

  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
  success 'Disable press-and-hold for keys in favor of key repeat'

  defaults write NSGlobalDomain KeyRepeat -int 1
  success 'Set a blazingly fast keyboard repeat rate'

  defaults write com.apple.BezelServices kDim -bool true
  success 'Automatically illuminate built-in MacBook keyboard in low light'

  defaults write com.apple.BezelServices kDimTime -int 300
  success 'Turn off keyboard illumination when computer is not used for 5 minutes'

  defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
  success 'Disable auto-correct'

  defaults write com.apple.screensaver askForPassword -int 1
  defaults write com.apple.screensaver askForPasswordDelay -int 0
  success 'Require password immediately after sleep or screen saver begins'

  defaults write com.apple.screencapture location -string "$HOME/Desktop"
  success 'Save screenshots to the desktop'

  defaults write com.apple.screencapture type -string "png"
  success 'Save screenshots in PNG format'

  defaults write com.apple.screencapture disable-shadow -bool true
  success 'Disable shadow in screenshots'

  defaults write NSGlobalDomain AppleFontSmoothing -int 2
  success 'Enable subpixel font rendering on non-Apple LCDs'

  sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
  success 'Enable HiDPI display modes (requires restart)'

  defaults write com.apple.finder QuitMenuItem -bool true
  success 'Allow quitting Finder via ⌘ + Q; doing so will also hide desktop icons'

  defaults write com.apple.finder DisableAllAnimations -bool true
  success 'Disable window animations and Get Info animations'

  defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
  defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
  defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
  defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
  success 'Hide all icons on the desktop'

  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  success 'Show all filename extensions'

  defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
  success 'Display full POSIX path as Finder window title'

  defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
  success 'When performing a search, search the current folder by default'

  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  success 'Disable the warning when changing a file extension'

  defaults write NSGlobalDomain com.apple.springing.enabled -bool true
  success 'Enable spring loading for directories'

  defaults write NSGlobalDomain com.apple.springing.delay -float 0
  success 'Remove the spring loading delay for directories'

  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
  success 'Avoid creating .DS_Store files on network volumes'

  defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
  defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
  defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
  success 'Automatically open a new Finder window when a volume is mounted'

  defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
  success 'Use list view in all Finder windows by default'

  defaults write com.apple.finder WarnOnEmptyTrash -bool false
  success 'Disable the warning before emptying the Trash'

  chflags nohidden ~/Library
  success 'Show the ~/Library folder'

  defaults write com.apple.dock tilesize -int 46
  success 'Set the icon size of Dock items to 46 pixels'

  defaults write com.apple.dock mineffect -string "scale"
  success 'Change minimize/maximize window effect'

  defaults write com.apple.dock minimize-to-application -bool false
  success 'Minimize windows into their application’s icon'

  defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true
  success 'Enable spring loading for all Dock items'

  defaults write com.apple.dock persistent-apps "()"
  success 'Remove all apps from the dock'

  defaults write com.apple.dock orientation -string "left"
  success 'Put the dock on the left side'

  defaults write com.apple.dock show-process-indicators -bool false
  success 'Hide indicator lights for open applications in the Dock'

  defaults write com.apple.dock launchanim -bool false
  success "Don’t animate opening applications from the Dock"

  defaults write com.apple.dock expose-animation-duration -float 0.1
  success 'Speed up Mission Control animations'

  defaults write com.apple.dock expose-group-by-app -bool false
  success "Don’t group windows by application in Mission Control"

  defaults write com.apple.dashboard mcx-disabled -bool true
  success 'Disable Dashboard'

  defaults write com.apple.dock dashboard-in-overlay -bool true
  success "Don’t show Dashboard as a Space"

  defaults write com.apple.dock mru-spaces -bool false
  success "Don’t automatically rearrange Spaces based on most recent use"

  defaults write com.apple.dock autohide -bool false
  success 'Always show the Dock'

  defaults write com.apple.Safari UniversalSearchEnabled -bool false
  defaults write com.apple.Safari SuppressSearchSuggestions -bool true
  success "Don’t send search queries to Apple"

  defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
  defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true
  success 'Press Tab to highlight each item on a web page'

  defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
  success 'Show the full URL in the address bar'

  defaults write com.apple.Safari HomePage -string "about:blank"
  success "Set Safari’s home page to 'about:blank' for faster loading"

  defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
  success "Prevent Safari from opening ‘safe’ files automatically after downloading"

  defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
  success "Enable Safari’s debug menu"

  defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
  success "Make Safari’s search banners default to Contains instead of Starts With"

  defaults write com.apple.Safari ProxiesInBookmarksBar "()"
  success "Remove useless icons from Safari’s bookmarks bar"

  defaults write com.apple.Safari IncludeDevelopMenu -bool true
  defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
  defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
  success 'Enable the Develop menu and the Web Inspector in Safari'

  sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search
  success 'Hide Spotlight tray-icon (and subsequent helper)'

  sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"
  success 'Disable Spotlight indexing for any volume that gets mounted and has not yet been indexed before'

  defaults write com.apple.spotlight orderedItems -array \
    '{"enabled" = 1;"name" = "APPLICATIONS";}' \
    '{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
    '{"enabled" = 1;"name" = "DIRECTORIES";}' \
    '{"enabled" = 1;"name" = "PDF";}' \
    '{"enabled" = 1;"name" = "FONTS";}' \
    '{"enabled" = 0;"name" = "DOCUMENTS";}' \
    '{"enabled" = 0;"name" = "MESSAGES";}' \
    '{"enabled" = 0;"name" = "CONTACT";}' \
    '{"enabled" = 0;"name" = "EVENT_TODO";}' \
    '{"enabled" = 0;"name" = "IMAGES";}' \
    '{"enabled" = 0;"name" = "BOOKMARKS";}' \
    '{"enabled" = 0;"name" = "MUSIC";}' \
    '{"enabled" = 0;"name" = "MOVIES";}' \
    '{"enabled" = 0;"name" = "PRESENTATIONS";}' \
    '{"enabled" = 0;"name" = "SPREADSHEETS";}' \
    '{"enabled" = 0;"name" = "SOURCE";}' \
    '{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
    '{"enabled" = 0;"name" = "MENU_OTHER";}' \
    '{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
    '{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
    '{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
    '{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'
  success 'Change indexing order and disable some search results'

  killall mds > /dev/null 2>&1
  success 'Load new settings before rebuilding the index'

  sudo mdutil -i on / > /dev/null
  success 'Make sure indexing is enabled for the main volume'

  sudo mdutil -E / > /dev/null
  success 'Rebuild the index from scratch'

  defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
  success 'Prevent Time Machine from prompting to use new hard drives as backup volume'

  hash tmutil &> /dev/null && sudo tmutil disablelocal
  success 'Disable local Time Machine backups'

  defaults write com.apple.ActivityMonitor OpenMainWindow -bool true
  success 'Show the main window when launching Activity Monitor'

  defaults write com.apple.ActivityMonitor IconType -int 5
  success 'Visualize CPU usage in the Activity Monitor Dock icon'

  defaults write com.apple.ActivityMonitor ShowCategory -int 0
  success 'Show all processes in Activity Monitor'

  defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
  defaults write com.apple.ActivityMonitor SortDirection -int 0
  success 'Sort Activity Monitor results by CPU usage'

  defaults write com.apple.appstore WebKitDeveloperExtras -bool true
  success 'Enable the WebKit Developer Tools in the Mac App Store'

  defaults write com.apple.appstore ShowDebugMenu -bool true
  success 'Enable Debug Menu in the Mac App Store'

  defaults write com.apple.menuextra.clock DateFormat -string "E MMM d HH:mm"
  success 'Set date and time format e.g. Sun 11 Aug 16:55'

  defaults write com.apple.dock no-bouncing -bool true
  success 'Disable Dock icons bounce animation'

  for app in "Activity Monitor" "cfprefsd" "Dock" "Finder" "Safari" "SystemUIServer"; do
      killall "${app}" > /dev/null 2>&1
  done
fi

user 'Also launch install script? (y/N) '
read -n 1 choice
choice=${choice:-N}
printf "\n"

if [[ $choice =~ ^[yY]$ ]]; then
  source install
fi

echo ''
success 'All done! :)'
exit $?
